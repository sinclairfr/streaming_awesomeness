services:
  iptv-manager:
    container_name: iptv-manager
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    user: "1000:1000"  # Exécuter en tant qu'utilisateur non-root (streamer)
    entrypoint: ["/app/start.sh"]
    volumes:
      - ./app/hls:/app/hls:rw
      - ./app/logs:/app/logs:rw
      - ./app/stats:/app/stats:rw
      - ./app:/app:ro  # En lecture seule, avec exceptions spécifiques ci-dessus
      - /mnt/docker_data/streaming_awesomeness/streaming_awesomeness/content:/mnt/videos:rw
    #dvices:
      #- /dev/dri/card1:/dev/dri/card1
      #- /dev/dri/renderD128:/dev/dri/renderD128
    security_opt:
      - apparmor:unconfined  # May be needed for full GPU access
    environment:
      - TZ=Europe/Paris
      - NVIDIA_VISIBLE_DEVICES=
      - PUID=1000
      - PGID=1000
    restart: unless-stopped

  nginx:
    user: root
    container_name: iptv-nginx
    image: nginx:alpine
    environment:
      - TZ=Europe/Paris
    env_file:
      - .env
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:rw
      - ./app/hls:/app/hls:rw
      - ./app/logs/nginx:/var/log/nginx:rw
    tmpfs:
      - /var/run/nginx
      - /var/cache/nginx
    depends_on:
      - iptv-manager
    restart: unless-stopped

  stats-dashboard:
    build: 
      context: ./app/stats_dashboard
      dockerfile: Dockerfile
    container_name: iptv-stats-dashboard
    ports:
      - "8050:8050"
    volumes:
      - ./app/stats:/app/stats
    environment:
      - TZ=Europe/Paris
    depends_on:
      - iptv-manager
    restart: unless-stopped
